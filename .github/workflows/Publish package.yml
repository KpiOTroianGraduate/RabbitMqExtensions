# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: 7.0.x

      - name: Build package
        run: dotnet build --configuration release

      - name: Setup nuget profile
        run: dotnet nuget add source --username ${{ secrets.USER_NAME }} --password ${{ secrets.USER_PASSWORD }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/KpiOTroianGraduate/index.json"

      - name: Publish package
        run: |
          find . -name "*.nupkg"
          find ./bin/Release -name "*.nupkg"
          find ./bin/Release -name "*.nupkg"
          find ./bin/Release -name "*.nupkg"
          find ././bin/Release -name "*.nupkg"
          find ././bin/Release/ -name "*.nupkg"
          find ././bin/Release/. -name "*.nupkg"
          find ./././bin/Release -name "*.nupkg"
          find ./././bin/Release/ -name "*.nupkg"
          find ./././bin/Release/. -name "*.nupkg"
          find ././././bin/Release/. -name "*.nupkg"
          find ././././bin/Release/. -name "*.nupkg"
          find ././././bin/Release/. -name "*.nupkg"
          find . -type "nupkg"
          find ./bin/Release -type "nupkg"
          find ./bin/Release -type "nupkg"
          find ./bin/Release -type "nupkg"
          find ././bin/Release -type "nupkg"
          find ././bin/Release/ -type "nupkg"
          find ././bin/Release/. -type "nupkg"
          find ./././bin/Release -type "nupkg"
          find ./././bin/Release/ -type "nupkg"
          find ./././bin/Release/. -type "nupkg"
          find ././././bin/Release/. -type "nupkg"
          find ././././bin/Release/. -type "nupkg"
          find ././././bin/Release/. -type "nupkg"
          echo readlink -f bin/Release/*.nupkg
          echo readlink -f ./bin/Release/*.nupkg
          echo readlink -f ././bin/Release/*.nupkg
          echo readlink -f ./././bin/Release/*.nupkg
          echo readlink -f ./././bin/Release/*.nupkg
          echo readlink -f ./././././bin/Release/*.nupkg
          echo readlink -f ././././././bin/Release/*.nupkg
          echo locate *.nupkg
          echo realpath -s *.nupkg
          dotnet nuget push (readlink -f bin/Release/*.nupkg) --source "github"